name: "godot-ci export"
on:
  push:
    branches: [ "main" ]

env:
  GODOT_VERSION: 4.4.1
  PROJECT_PATH: .
  ITCH_USERNAME: jjszaniszlo
  ITCH_GAME_ID: sunburnt-survivors

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-24.04
    container:
      image: barichello/godot-ci:mono-4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono

      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          godot --headless --verbose --export-release "Windows Desktop" --path "${PROJECT_PATH}" --output "build/windows/sunburnt_survivors.exe"
  
      - name: Zip Windows Artifacts
        run: |
          cd build/windows
          zip -r ../../sunburnt_survivors_windows.zip *

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: sunburnt_survivors_windows.zip 

  export-linux:
    name: Linux Export
    runs-on: ubuntu-24.04
    container:
      image: barichello/godot-ci:mono-4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono

      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          godot --headless --verbose --export-release "Linux" --path "${PROJECT_PATH}" --output "build/linux/sunburnt_survivors.x86_64"

      - name: Zip Linux Artifacts
        run: |
          cd build/linux
          zip -r ../../sunburnt_survivors_linux.zip *

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: sunburnt_survivors_linux.zip

  export-mac:
    name: Mac Export
    runs-on: ubuntu-24.04
    container:
      image: barichello/godot-ci:mono-4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono

      - name: Mac Build
        run: |
          mkdir -v -p build/macos
          godot --headless --verbose --export-release "macOS" --path "${PROJECT_PATH}" --output "build/macos/sunburnt_survivors.zip"

      - name: Zip MacOS Artifacts
        run: |
          cd build/macos
          zip -r ../../sunburnt_survivors_macos.zip *

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: sunburnt_survivors_macos.zip

  release:
    needs: [ export-linux, export-windows, export-mac ]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      - name: Execute GitVersion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
          configFilePath: GitVersion.yaml

      - name: Get branch name
        id: get_branch
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux

      - name: Download MacOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{env.GitVersion_MajorMinorPatch}}
          release_name: ${{env.GitVersion_MajorMinorPatch}}
          body: |
            Release notes for ${{env.GitVersion_MajorMinorPatch}}
          draft: false
          prerelease: false

      - name: Upload Linux Release Asset
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: sunburnt_survivors_linux.zip
          asset_name: sunburnt_survivors_linux_x86_64.zip
          asset_content_type: application/zip

      - name: Upload MacOS Release Asset
        id: upload-macos-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: sunburnt_survivors_macos.zip
          asset_name: sunburnt_survivors_macos_universal.zip
          asset_content_type: application/zip

      - name: Upload Windows Release Asset
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: sunburnt_survivors_windows.zip
          asset_name: sunburnt_survivors_windows_x86_64.zip
          asset_content_type: application/zip

      - name: Upload builds to Itch.io
        uses: Ayowel/butler-to-itch@v1
        with:
          butler_key: ${{ secrets.BUTLER_CREDENTIALS }}
          itch_user: jjszaniszlo
          itch_game: sunburnt-survivors
          version: ${{ env.GitVersion_MajorMinorPatch }}
          auto_channel: true
          files: |
            *.zip
